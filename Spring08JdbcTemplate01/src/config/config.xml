<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd">
	
	<!-- jdbc.properties 파일을 불러오기 -->
	<context:property-placeholder location="classpath:/config/jdbc.properties"/>
	
	<!--
		JDBC Template을 위한 DataSource 객체 생성
		각 property 앨리먼트들의 name은 DataSource 클래스의 setter 메소드를 사용한 것이다.
		예) setDriverClassName(${jdbc.driverClassName})
	 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName"	value="${jdbc.driverClassName}" />
		<property name="url"				value="${jdbc.url}" />
		<property name="username"			value="${jdbc.username}" />
		<property name="password"			value="${jdbc.password}" />
		<property name="maxActive"			value="${jdbc.maxActive}" />
	</bean>
	
	<!--
		기존 Java의 JDBC보다 더 편하게 사용할 수 있도록
		Spring에서 제공하는 JDBC Template 클래스 객체 생성.
		ref 속성(attribute)은 위에서 만든 dataSource 빈 객체를
		생성자의 파라미터로 사용하겠다는 뜻이다. 
	 -->
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource"></constructor-arg>
	</bean>

</beans>