<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:jdbc="http://www.springframework.org/schema/jdbc"
   xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- MySQL 데이터베이스 접속 -->
	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="url" value="jdbc:mysql://localhost:3306/koitt?useSSL=false"/>
		<property name="username" value="root"/>
		<property name="password" value="koitt"/>
	</bean>

	<!-- chunk 덩어리 꽉 찼을 때 전달하는 녀석 -->
	<bean id="transactionManager"
	class="org.springframework.batch.support.transaction.ResourcelessTransactionManager"/>
	
	<!-- job-meta 테이블 자동으로 생성 -->
	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="org/springframework/batch/core/schema-drop-mysql.sql"/>
		<jdbc:script location="org/springframework/batch/core/schema-mysql.sql"/>
	</jdbc:initialize-database>

	<!-- JobRepository bean 생성 (DB 저장?) -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="transactionManager" ref="transactionManager"/>
		<property name="databaseType" value="mysql"/>
	</bean>
	
		<!--  JobLauncher 빈 생성 (빈 실행용)-->
	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository"/>
	</bean>
	
	<!-- Job과 관련된 스프링 설정은 따로 분리해서 선언하기 위해 import 사용 -->
	<import resource="../jobs/job-csv-to-xml.xml"/>

</beans>
